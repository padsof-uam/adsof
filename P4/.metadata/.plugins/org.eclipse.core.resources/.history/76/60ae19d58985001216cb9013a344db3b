/**
 * 
 */
package practica4;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Scanner;

/**
 * @author gjulianm
 * 
 */
public class Menu implements IExecutable {
	ArrayList<MenuOption> options = new ArrayList<MenuOption>();

	private int readOption(int max) {
		int option;
		String input;
		Scanner scanner = null;
		try {
			scanner = new Scanner(System.in);

			do {
				System.out.print("Introduzca una opci—n > ");
				if(scanner.hasNextInt())
					option = scanner.nextInt();
				else {
					input = scanner.next();
					if(input == "a")
						option = -1;
					else if(input == "s")
						option = -2;
					else
						option = -5; // Para que repita.
				}
			} while ((option > 0 && option <= max) || option == -1 || option == -2);
		} finally {
			if (scanner != null)
				scanner.close();
		}
	
		return option;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see practica4.IExecutable#ejecutar(java.lang.Object)
	 */
	@Override
	public Object ejecutar(Object o) throws ExecutionException {
		int counter = 0;
		int option;
		System.out.println("***************************");
		System.out.println("** Aplicaci—n Suma Resta **");
		System.out.println("***************************");
		System.out.println("Opciones:");

		for (MenuOption mo : options) {
			counter++;
			if (mo.isActive())
				System.out.println(counter + ".- " + mo.getName());
			else
				System.out.println(" .- [" + mo.getName() + "]");
		}
		
		option = readOption(counter);
		
		try
		{
			if(option > 0)
				options.get(option - 1).execute(null);
			else if(option == -1)
				help.execute(options);
			else
				System.out.println("Saliendo.");
		}
		catch(ExecutionException e)
		{
			System.out.println("Error de ejecuci—n en " + e.getMethod() + ": " + e.getMessage());
		}
		catch(Exception e)
		{
			System.out.println("Error general " + e.getClass().getName() + ": " + e.getMessage());
		}

	}

	public void addOption(MenuOption option) {
		options.add(option);
	}

	public void addOptions(Collection<MenuOption> list) {
		options.addAll(list);
	}

	public void sortOptions() {
		Collections.sort(options);
	}

	public void deleteOption(MenuOption o) {
		options.remove(o);
	}
}
